# SDC Constraints File
# Target Frequency: 100 MHz (You MUST change this based on your actual target!)
# Created for Cadence Genus Synthesis

#### 1. Define the Clock ####
# This is the MOST IMPORTANT constraint.
# Assume your clock period is 10ns (100 MHz). Adjust the value for your actual target frequency.
create_clock -name clk -period 10 -waveform {0 5} [get_ports clk]

# Set clock uncertainty (setup and hold margin). A good starting point is ~10-15% of the period.
set_clock_uncertainty -setup 0.5 [get_clocks clk]
set_clock_uncertainty -hold 0.1 [get_clocks clk]

# If your clock is generated by a real oscillator on the board and doesn't pass through logic,
# it's good practice to define it as an ideal network. The tool will ignore its latency during synthesis.
# You will add real clock tree latency later during Place & Route.
set_ideal_network [get_ports clk]

#### 2. Define the Asynchronous Reset ####
# The reset is asynchronous but we need to define its timing characteristics.
# First, tell the tool it's a asynchronous signal that doesn't need to be timed with the clock.
set_false_path -from [get_ports rst_n] -to [all_registers]

# Now, define the input delay for the reset pin. This is the delay from the external chip
# that generates the reset to the input port of your FPGA/ASIC.
# The value '1.0' is an example. You need to get this from your board's specifications.
set_input_delay -clock clk -max 1.0 [get_ports rst_n]

#### 3. Define Input Constraints for part_in ####
# This is a 16-bit data bus coming from another chip.
# You need to know the timing of the external device driving this port.
# 'input_delay_max': The latest time data can arrive after the clock edge.
# 'input_delay_min': The earliest time data can arrive (related to hold time).

# Example: The external device provides data 4ns after the clock edge at the latest,
# and 1ns after the clock edge at the earliest.
set_input_delay -clock clk -max 4.0 [get_ports part_in]
set_input_delay -clock clk -min 1.0 [get_ports part_in]


#### 4. Define Output Constraints for done and out_activehigh ####
set_output_delay -clock clk -max 3.0 [get_ports {done out_activehigh[*]}]
set_output_delay -clock clk -min -0.5 [get_ports {done out_activehigh[*]}]

# Set a realistic capacitive load for the output ports
set_load 0.05 [get_ports out_activehigh[*]]
set_load 0.02 [get_ports done] 
# 'done' is a single bit, so maybe less load

#### 5. Additional General Constraints ####
# Prevent the tool from creating slew-rate violations by defining max transition time.
# This ensures signals don't switch too slowly, which can cause problems.
set_max_transition 0.5 [current_design]

# Optionally, you can set a fanout load for all inputs if you know the typical drive strength.
# set_driving_cell -lib_cell "your_lib_name/your_input_cell" [all_inputs]